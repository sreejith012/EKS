apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-server
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: api-server-discoverer
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "configmaps", "pods"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: api-server-discoverer
subjects:
  - kind: ServiceAccount
    name: api-server
roleRef:
  kind: Role
  name: api-server-discoverer
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: v1
kind: Service
metadata:
  name: api-server
  labels:
    app: api-server
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 3001
  selector:
    app: api-server
    version: v1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: api-server
        version: v1
      annotations: 

    spec:
      serviceAccountName: api-server
      containers:
        - name: api-server
          image: ${IMG_TAG_TO_DEPLOY}
          imagePullPolicy: 'Always'
          ports:
            - containerPort: 3001